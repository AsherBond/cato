{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a basic Wordpress server using Chef solo.",
    "Parameters": {
        "KeyName": {
        	"Default": "",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t1.micro",
            "AllowedValues": [
                "t1.micro"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "DBName": {
            "Default": "wordpress",
            "Description": "The WordPress database name",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBUsername": {
            "Default": "admin",
            "NoEcho": "true",
            "Description": "The WordPress database admin account username",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBPassword": {
            "Default": "admin",
            "NoEcho": "true",
            "Description": "The WordPress database admin account password",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        },
        "DBRootPassword": {
        	"Default": "",
            "NoEcho": "true",
            "Description": "Root password for MySQL",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t1.micro": {
                "Arch": "64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "64": "ami-349b495d"
            }
        }
    },
    "Resources": {
        "CfnUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "cloudformation:DescribeStackResource",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "HostKeys": {
            "Type": "AWS::IAM::AccessKey",
            "Properties": {
                "UserName": {
                    "Ref": "CfnUser"
                }
            }
        },
        "WebServer": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "set -e -x\n",
                                "export DEBIAN_FRONTEND=noninteractive\n",
                                "echo \"deb http://apt.opscode.com/ `lsb_release -cs`-0.10 main\" | tee /etc/apt/sources.list.d/opscode.list\n",
                                "mkdir -p /etc/apt/trusted.gpg.d\n",
                                "gpg --keyserver keys.gnupg.net --recv-keys 83EF826A\n",
                                "gpg --export packages@opscode.com | sudo tee /etc/apt/trusted.gpg.d/opscode-keyring.gpg > /dev/null\n",
                                "apt-get --yes --quiet update\n",
                                "apt-get install opscode-keyring\n",
                                "echo \"chef chef/chef_server_url string none\" | debconf-set-selections && apt-get install chef -y\n",
                                "apt-get --yes --quiet install git-core\n",
                                "cd /var\n",
                                "git clone git://github.com/opscode/chef-repo.git &> /tmp/myscript.log\n",
                                "sudo knife cookbook site install wordpress --cookbook-path /var/chef-repo/cookbooks &> /tmp/myscript.log\n",
                                "echo -e 'file_cache_path \"/var/chef-repo\"\\ncookbook_path \"/var/chef-repo/cookbooks\"' | tee /etc/chef/solo.rb\n",
                                "echo -e '{\n",
                                "    \"wordpress\": {\n",
                                "        \"db\": {\n",
                                "            \"database\": \"", { "Ref": "DBName" }, "\",\n",
                                "            \"user\": \"", { "Ref": "DBUsername" }, "\",\n",
                                "            \"password\": \"", { "Ref": "DBPassword" }, "\",\n",
                                "            \"host\": \"localhost\"\n",
                                "          }\n",
                                "      },\n",
                                "    \"run_list\": [\"recipe[wordpress]\"]\n",
                                "}' | tee /etc/chef/node.json\n",
                                "chef-solo -j /etc/chef/node.json &> /tmp/myscript.log\n",
                                "touch /home/ubuntu/complete\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80 and SSH access",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "WebsiteURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "WebServer",
                                "PublicDnsName"
                            ]
                        },
                        "/wordpress"
                    ]
                ]
            },
            "Description": "WordPress Website"
        }
    }
}