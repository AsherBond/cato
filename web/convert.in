		//two private functions to support the wmGetEcosystemObjectByType
        private string DrawAllEcosystemObjectProperties(DataTable dtProps, DataTable dtStormTags, string sObjectID)
        {
            string sHTML = "";
            string sIDColumnName = ""; //dtProps.Columns[0].ColumnName


            //what is the name of the first column?
            //all over the place with AWS we hardcode and assume the first column is the 'ID'.
			//that's bad - so spin the columns looking for the one with the Extended Property that says it's the id
			foreach (DataColumn dc in dtProps.Columns)
			{
				if (dc.ExtendedProperties["IsID"].ToString() == "True") {
					sIDColumnName = dc.ColumnName;
					// no more! even if multiples are defined as the ID field, only one can be.
					break;
				}
			}
			
			//no sIDColumnName means we can't continue
			if (string.IsNullOrEmpty(sIDColumnName))
				return "ID column not defined for Cloud Object " + sObjectID;
			

			DataRow[] drFound;
			drFound = dtProps.Select(sIDColumnName + " = '" + sObjectID + "'");
			
			if (drFound.Count() > 0)
			{
				foreach (DataColumn dcAPIResultsColumn in dtProps.Columns)
                {
					//draw only the short list properties here.
					bool bShortList = (dcAPIResultsColumn.ExtendedProperties["ShortList"] != null ?
					                   (dcAPIResultsColumn.ExtendedProperties["ShortList"].ToString() == "True" ? true : false) : false);
					
                    //there should be only one row - that's why I'm using the explicit index of 0
					if (bShortList)
						sHTML += DrawEcosystemObjectProperty(drFound[0], dcAPIResultsColumn.ColumnName);
				}
				
				
				
				//there *might* be a column named "Tags"... if so, it's special and contains the xml of a tag set.
				//now draw the tag columns only
				if (drFound[0].Table.Columns["Tags"] != null) {
					if (drFound[0]["Tags"] != null) {
						XElement xDoc = XElement.Parse(drFound[0]["Tags"].ToString());
						if (xDoc != null) {
							sHTML += "<div class=\"ui-widget-header\">AWS Tags</div>";
							foreach (XElement xeTag in xDoc.Elements("item"))
							{
								sHTML += "<div class=\"ecosystem_item_property\">" + xeTag.Element("key").Value + 
									": <span class=\"ecosystem_item_property_value\">" + xeTag.Element("value").Value + "</span></div>";
							}
						}
					}
				}				
			

				//now lets draw the Storm tags
				// ! NOT the same kind of set as above, this one is multiple simple key/value pairs for an object_id
				DataRow[] drStormTags;
				drStormTags = dtStormTags.Select("ecosystem_object_id = '" + sObjectID + "'");
				if (drFound.Count() > 0)
				{
					sHTML += "<div class=\"ui-widget-header\">Storm Tags</div>";
					foreach (DataRow drTag in drStormTags)
					{
						sHTML += "<div class=\"ecosystem_item_property\">" + drTag["key_name"].ToString() + 
							": <span class=\"ecosystem_item_property_value\">" + drTag["value"].ToString() + "</span></div>";
					}
				}
            }
            else { sHTML += "No data found for " + sObjectID; }
            
			return sHTML;
        }
        private string DrawEcosystemObjectProperty(DataRow dr, string sPropertyName)
        {
            string sHTML = "";
            string sValue = (string.IsNullOrEmpty(dr[sPropertyName].ToString()) ? "" : dr[sPropertyName].ToString());
            string sIcon = "";

            //some fields have a status or other icon.
            //it's noted in the extended properties of the column in the AWS results.
            //we are simply assuming to have an image file for every propery that might have an icon.
            //the images will be named "property_value.png" 
            //NOTE: collapsed for spaces of course... just to be safe
			bool bHasIcon = (dr.Table.Columns[sPropertyName].ExtendedProperties["HasIcon"] != null ?
			                 (dr.Table.Columns[sPropertyName].ExtendedProperties["HasIcon"].ToString() == "True" ? true : false) : false);
            if (bHasIcon)
            {
                if (sValue != "")
                    sIcon = "<img class=\"custom_icon\" src=\"../images/custom/" + 
						sPropertyName.Replace(" ", "").ToLower() + "_" + 
						sValue.Replace(" ", "") + ".png\" alt=\"\" />".ToLower();
            }

            sHTML += (sValue == "" ? "" : "<div class=\"ecosystem_item_property\">" + dr.Table.Columns[sPropertyName].Caption + ": <span class=\"ecosystem_item_property_value\">" + sIcon + sValue + "</span></div>");

            return sHTML;
        }