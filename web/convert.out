        # two def functions to support the wmGetEcosystemObjectByType
        def DrawAllEcosystemObjectProperties(DataTable dtProps, DataTable dtStormTags, sObjectID):
            sHTML = ""
            sIDColumnName = "" # dtProps.Columns[0].ColumnName


            # what is the name of the first column?
            # all over the place with AWS we hardcode and assume the first column is the 'ID'.
            # that's bad - so spin the columns looking for the one with the Extended Property that says it's the id
### CHECK NEXT LINE for type declarations !!!
            for DataColumn dc in dtProps.Columns:
if dc.ExtendedProperties["IsID"] == "True":
                    sIDColumnName = dc.ColumnName
                    #  no more! even if multiples are defined as the ID field, only one can be.
                    break
            
            # no sIDColumnName means we can't continue
            if not sIDColumnName:
                return "ID column not defined for Cloud Object " + sObjectID
            

            DataRow[] drFound
            drFound = dtProps.Select(sIDColumnName + " = '" + sObjectID + "'")
            
            if drFound.Count() > 0:
### CHECK NEXT LINE for type declarations !!!
                for DataColumn dcAPIResultsColumn in dtProps.Columns:
                    # draw only the short list properties here.
                    bShortList = (dcAPIResultsColumn.ExtendedProperties["ShortList"] is not None ?
                                       (true  false) if dcAPIResultsColumn.ExtendedProperties["ShortList"] == "True" else false  false)
                    
                    # there should be only one row - that's why I'm using the explicit index of 0
                    if bShortList:
                        sHTML += DrawEcosystemObjectProperty(drFound[0], dcAPIResultsColumn.ColumnName)
                
                
                
                # there *might* be a column named "Tags"... if so, it's special and contains the xml of a tag set.
                # now draw the tag columns only
if drFound[0].Table.Columns["Tags"] is not None:
if drFound[0]["Tags"] is not None:
                        xDoc = XElement.Parse(drFound[0]["Tags"])
if xDoc is not None:
                            sHTML += "<div class=\"ui-widget-header\">AWS Tags</div>"
### CHECK NEXT LINE for type declarations !!!
                            for xeTag in xDoc.Elements("item"):
                                sHTML += "<div class=\"ecosystem_item_property\">" + xeTag.find("key", "") # WAS A .Value - confirm + 
                                    ": <span class=\"ecosystem_item_property_value\">" + xeTag.find("value", "") # WAS A .Value - confirm + "</span></div>"
            

                # now lets draw the Storm tags
                #  ! NOT the same kind of set as above, this one is multiple simple key/value pairs for an object_id
                DataRow[] drStormTags
                drStormTags = dtStormTags.Select("ecosystem_object_id = '" + sObjectID + "'")
                if drFound.Count() > 0:
                    sHTML += "<div class=\"ui-widget-header\">Storm Tags</div>"
### CHECK NEXT LINE for type declarations !!!
                    for DataRow drTag in drStormTags:
                        sHTML += "<div class=\"ecosystem_item_property\">" + drTag["key_name"] + 
                            ": <span class=\"ecosystem_item_property_value\">" + drTag["value"] + "</span></div>"
            else { sHTML += "No data found for " + sObjectID; }
            
            return sHTML
        def DrawEcosystemObjectProperty(DataRow dr, sPropertyName):
            sHTML = ""
            sValue = ("" if not dr[sPropertyName] else dr[sPropertyName])
            sIcon = ""

            # some fields have a status or other icon.
            # it's noted in the extended properties of the column in the AWS results.
            # we are simply assuming to have an image file for every propery that might have an icon.
            # the images will be named "property_value.png" 
            # NOTE: collapsed for spaces of course... just to be safe
            bHasIcon = (dr.Table.Columns[sPropertyName].ExtendedProperties["HasIcon"] is not None ?
                             (true  false) if dr.Table.Columns[sPropertyName].ExtendedProperties["HasIcon"] == "True" else false  false)
            if bHasIcon:
                if sValue != "":
                    sIcon = "<img class=\"custom_icon\" src=\"static/images/custom/" + 
                        sPropertyName.replace(" ", "").lower() + "_" + 
                        sValue.replace(" ", "") + ".png\" alt=\"\" />".lower()

            sHTML += (""  "<div class=\"ecosystem_item_property\">" + dr.Table.Columns[sPropertyName].Caption + " if sValue == "" else "<div class=\"ecosystem_item_property\">" + dr.Table.Columns[sPropertyName].Caption + " <span class=\"ecosystem_item_property_value\">" + sIcon + sValue + "</span></div>")

            return sHTML
