Cloud Sidekick Cato Task Engine

------------------------------------------
Description
------------------------------------------

The Cato automation toolkit consists of 3 major components: webserver, 
database and task engine. This document covers the Task Engine component.  

The Cato Task Engine serves as the main processing engine of Cato and 
includes 4 services:

cato_poller	- Polls the MySQL database looking for Tasks to run
cato_scheduler	- Schedules Tasks for the future
cato_messenger	- Sends email messages
cato_ecosync	- Adds and removes Ecosystem objects, syncing them with the 
		  cloud provider

This document will cover the most basic configuration, a single Task Engine
node. More advanced configuration will be covered in future installments. 

------------------------------------------
Repository and Download
------------------------------------------

https://github.com/cloudsidekick/cato

------------------------------------------
Bug and Feature Requests
------------------------------------------

https://github.com/cloudsidekick/cato/issues

------------------------------------------
Requirements
------------------------------------------

Third party open source packages needed:

Tcl >= 8.5, mysqltcl, TclCurl, Tcl tls, MySQL client, Tdom, Tcllib, Expect and 
TclOO if Tcl version 8.5 is used.

Optional components:

FreeTDS, tcltds, Oracle client, OraTcl

See the build instructions below for details on these components.

------------------------------------------
Building
------------------------------------------

The following build instructions document the build process assuming Debian 
Linux. Other flavors of linux will be covered as well in the future. 

1. Download and install third party packages. 

   Use the following command to download the required third party packages. 

   On Debian / Ubuntu:

   sudo apt-get install tcl8.5 tcl8.5-dev tcllib mysqltcl tclcurl tcl-tls tdom expect

2. Build the catocrypt shared library.

   Go to the catocrypt library and edit the Makefile. Notice the 
   first few lines. Change TCL_* lines to match the appropriate locations
   and version of tcl installed. The default locations are appropriate  
   for the standard Debian / Ubuntu package install. Lastly run make.

   The resulting shared library will be located in the lib/catocrypt 
   directory under the source root.

   cd src/catocrypt
   vi Makefile
   make

   TODO: create TEA-based configure / Makefiles

3. Download, build and install TclOO.

   NOTE: If Tcl version 8.6 or higher being used for the tcl runtime, SKIP THIS 
   STEP. TclOO is part of the 8.6 distribution. 

   If using Tcl 8.5, the TclOO (Object-Oriented Tcl) package must be compiled 
   and installed. First download TclOO and proceed with the following steps.

   NOTE: you may need to refer to the TclOO README.txt for further build help.   

   wget http://downloads.sourceforge.net/project/tcl/TclOO%20Package/0.6/TclOO0.6.tar.gz
   tar -zxvf TclOO0.6.tar.gz
   cd TclOO0.6
   ./configure --with-tcl=/usr/lib/tcl8.5 --prefix=/usr
   make
   sudo make install

4. Optional third party libraries are listed below. Install if needed in your 
   automation environment. 

   5.a Connectivity to Sybase and Microsoft SQL Server databases: FreeTDS and Tcltds.

      http://www.freetds.org/

      On Debian / Ubuntu:
   
      sudo apt-get install libaprutil1-dbd-freetds

      Also, you will need the Tcltds library which exposes FreeTDS to Tcl. 

      wget -O tcltds.tar.gz https://github.com/cloudsidekick/tcltds/tarball/master 
      tar xvzf tcltds.tar.gz

      Change into the tcltds directory and view the README file for build and install instructions.


   5.b Oracle connectivity: Oracle client and Oratcl

      The Oracle client will need to be installed on any Cato Task Engine server
      that needs Oracle database connectivity. See www.oracle.com form client options. 
      It should be noted that the Task Engine has been tested with most of the Oracle
      Client options, including the Instant Client. 

      Once the Oracle Client has been installed, See the following link for the Oratcl
      extension:

      http://sourceforge.net/projects/oratcl/files/oratcl/4.5/

------------------------------------------
Installation
------------------------------------------

Assuming the build process and third party packages are ins

